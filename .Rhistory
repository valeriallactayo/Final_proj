rm(list = ls())
pacman :: p_load(tidyverse,
lattice,
psych,
PerformanceAnalytics,
GGally,
cptcity)
fires <- read_csv("fires_area.csv") %>%
print()
fires_pca <- select(fires, 5:13) %>%
print()
fires <- read_csv("fires_area.csv") %>%
print()
fires
view(fires)
fires_pca <- select(fires, 5:13) %>%
print()
fires_pca <- select(fires, 5:12) %>%
print()
#describiendo los datos
describe(fires_pca)
#esttandarizando
fires_pca_esc <- scale(fires_pca) %>% as_tibble() %>%
print()
#matriz de correlación
correlation <- cor(fires_pca_esc) %>%
print()
#matriz de varianza-covarianza
matrix_cov <- cov(fires_pca_esc) %>% print()
#suma de la diagonal o "varianza total"
diag(matrix_cov) %>% sum()
chart.Correlation(fires_pca_esc, histogram = T, pch = 20)
levelplot(
correlation,
col.regions =
cpt(
pal = "cb_div_RdBu_11", n = 100
)
)
eigen <- eigen(matrix_cov) %>% print()
#calculando el pca
library(ade4)
pca <- dudi.pca(fires_pca_esc,
scale = F,
scannf = F,
nf = ncol(fires_pca_esc)
)
summary(pca)
pca$eig
sum(pca$eig)
#autovectores
pca$c1
library(factoextra)
fviz_eig(pca,addlabels = T)
levelplot(
as.matrix(pca$co),
col.regions =
cpt(
pal = "cb_div_RdBu_11", n = 100, rev = F
)
)
contrib <- as.matrix(pca$co ^ 2)
library(corrplot)
corrplot(contrib, is.corr = F)
corrplot(contrib, is.corr = F)
as.tibble(fires_pca_esc)
head(pca$li) #ese li
dim(pca$li)
output <- as.tibble(pca$li) %>%
dplyr::select(sprintf("Axis%1$s", 1:3)) %>%
print()
fviz_pca_biplot(pca, repel = F, col.var = "black", col.ind = "gray")
library(FactoMineR)
fviz_pca_ind(pca)
fviz_pca_ind(pca, geom.ind = "point",
col.ind = "#FC4E07",
axes = c(1, 2),
pointsize = 1.5)
fviz_pca_var(pca_nci, col.var = "cos2",
geom.var = "arrow",
labelsize = 2,
repel = FALSE)
fviz_pca_var(pca, col.var = "cos2",
geom.var = "arrow",
labelsize = 2,
repel = FALSE)
biplot(pca, scale = 0, cex = 0.5, col = c("dodgerblue3", "deeppink3"))
biplot(pca, scale = 0, cex = 0.5, col = c("blue", "pink"))
biplot(pca, scale = 0, cex = 0.5, col = c("blue", "pink"))
install.packages("rgl")
fires_pca <- select(fires, 5:12) %>%
print()
mycolors <- c('royalblue1', 'darkcyan', 'oldlace')
fires_pca$color <- mycolors[ as.numeric(fires_pca$area) ]
plot3d(
x=data$`temp`, y=data$`wind`, z=data$`RH`,
col = data$color,
type = 's',
radius = .1,
xlab="temp", ylab="wind", zlab="R humidity")
library(rgl)
mycolors <- c('royalblue1', 'darkcyan', 'oldlace')
fires_pca$color <- mycolors[ as.numeric(fires_pca$area) ]
#describiendo los datos
describe(fires_pca)
fires_pca_esc$color <- mycolors[ as.numeric(fires_pca_esc$area) ]
fires_pca$color <- mycolors[ as.numeric(fires_pca$area) ]
plot3d(
x=data$`temp`, y=data$`wind`, z=data$`RH`,
col = c("blue", "green", "pink"),
type = 's',
radius = .1,
xlab="temp", ylab="wind", zlab="R humidity")
plot3d(
x=fires_pca$`temp`, y=fires_pca$`wind`, z=fires_pca$`RH`,
col = c("blue", "green", "pink"),
type = 's',
radius = .1,
xlab="temp", ylab="wind", zlab="R humidity")
plot3d(
x=fires_pca$`temp`, y=fires_pca$`wind`, z=fires_pca$`RH`,
col = c("blue", "green", "pink"),
type = 's',
radius = 1,
xlab="temp", ylab="wind", zlab="R humidity")
plot3d(
x=fires_pca$`temp`, y=fires_pca$`wind`, z=fires_pca$`RH`,
col = c("blue", "green", "pink"),
type = 's',
radius = 1,
xlab="temp", ylab="wind", zlab="R humidity")
pca
output <- as.tibble(pca$li) %>%
dplyr::select(sprintf("Axis%1$s", 1:3)) %>%
print()
corrplot(contrib, is.corr = F)
output <- as.tibble(pca$li) %>%
dplyr::select(sprintf("Axis%1$s", 1:4)) %>%
print()
fviz_pca_biplot(pca, repel = F, col.var = "black", col.ind = "gray")
output <- as.tibble(pca$li) %>%
dplyr::select(sprintf("Axis%1$s", 1:3)) %>%
print()
plot3d(
x=output$`Axis1`, y=output$`Axis2`, z=output$`Axis3`,
col = c("blue", "green", "pink"),
type = 's',
radius = 1,
xlab="Comp 1", ylab="Comp 2", zlab="Comp 3")
plot3d(
x=output$`Axis1`, y=output$`Axis2`, z=output$`Axis3`,
col = c("blue", "green", "pink"),
type = 's',
radius = .5,
xlab="Comp 1", ylab="Comp 2", zlab="Comp 3")
plot3d(
x=output$`Axis1`, y=output$`Axis2`, z=output$`Axis3`,
col = c("blue", "green", "pink"),
type = 's',
radius = .25,
xlab="Comp 1", ylab="Comp 2", zlab="Comp 3")
plot3d(
x=output$`Axis1`, y=output$`Axis2`, z=output$`Axis3`,
col = c("blue", "green", "pink"),
type = 's',
radius = .15,
xlab="Comp 1", ylab="Comp 2", zlab="Comp 3")
fires <- read_csv("fires_area.csv") %>%
print()
view(fires)
fires_pca <- select(fires, 5:12) %>%
print()
#describiendo los datos
describe(fires_pca)
#esttandarizando
fires_pca_esc <- scale(fires_pca) %>% as_tibble() %>%
print()
#matriz de correlación
correlation <- cor(fires_pca_esc) %>%
print()
#matriz de correlación
correlation <- cor(fires_pca_esc) %>%
print()
#matriz de varianza-covarianza
matrix_cov <- cov(fires_pca_esc) %>% print()
chart.Correlation(fires_pca_esc, histogram = T, pch = 20)
corrplot(correlation),        # Matriz de correlación
method = "shade", # Método para el gráfico de correlación
type = "full",    # Estilo del gráfico (también "upper" y "lower")
diag = TRUE,      # Si TRUE (por defecto), añade la diagonal
tl.col = "black", # Color de las etiquetas
bg = "white",     # Color de fondo
title = "",       # Título
col = NULL)
corrplot(correlation,
method = "shade",
type = "full",
diag = TRUE,
tl.col = "black", bg = "white", title = "Correlation Matrix", col = NULL)       # Paleta de colores
corrplot(correlation,
method = "number",
type = "full",
diag = TRUE,
tl.col = "black",
bg = "white",
title = "Correlation Matrix",
col = NULL)
#matriz de varianza-covarianza
matrix_cov <- cov(fires_pca_esc) %>% print()
corrplot(matrix_cov,
method = "number",
type = "full",
diag = TRUE,
tl.col = "black",
bg = "white",
title = "Covariation matrix",
col = NULL)
levelplot(
correlation,
col.regions =
cpt(
pal = "cb_div_RdBu_11", n = 100
)
)
library(factoextra)
fviz_eig(pca,addlabels = T)
levelplot(
as.matrix(pca$co),
col.regions =
cpt(
pal = "cb_div_RdBu_11", n = 100, rev = F
)
)
contrib <- as.matrix(pca$co ^ 2)
contrib <- as.matrix(pca$co ^ 2)
contrib
corrplot(contrib, is.corr = F)
fires_pca_esc
plot3d(
x=fires_pca_esc$`FFMC`, y=fires_pca_esc$`DMC`, z=fires_pca_esc$`Temp`,
col = c("blue", "green", "pink"),
type = 's',
radius = .15,
xlab="Comp 1", ylab="Comp 2", zlab="Comp 3")
plot3d(
x=fires_pca_esc$`FFMC`, y=fires_pca_esc$`DMC`, z=fires_pca_esc$`temp`,
col = c("blue", "green", "pink"),
type = 's',
radius = .15,
xlab="Comp 1", ylab="Comp 2", zlab="Comp 3")
plot3d(
x=fires_pca_esc$`FFMC`, y=fires_pca_esc$`DMC`, z=fires_pca_esc$`temp`,
col = c("blue", "green", "pink"),
type = 's',
radius = .10,
xlab="Comp 1", ylab="Comp 2", zlab="Comp 3")
fviz_pca_ind(pca, geom.ind = "point",
col.ind = "#FC4E07",
axes = c(1, 2),
pointsize = 1.5)
fviz_pca_var(pca, col.var = "cos2",
geom.var = "arrow",
labelsize = 2,
repel = FALSE)
fviz_pca_var(pca, col.var = "cos2",
geom.var = "arrow",
labelsize = 3,
repel = FALSE)
fviz_pca_biplot(pca, repel = F, col.var = "black", col.ind = "gray")
plot3d(
x=output$`Axis1`, y=output$`Axis2`, z=output$`Axis3`,
col = c("blue", "green", "pink"),
type = 's',
radius = .15,
xlab="Comp 1", ylab="Comp 2", zlab="Comp 3")
install.packages("Rtsne")
library(tsne)
library(rtsne)
library(Rtsne)
library(ggplot2)
tsne <- Rtsne(X = fires_pca_esc, is_distance = FALSE, dims = 3, perplexity = 30,
theta = 0.5, max_iter = 500)
tsne <- Rtsne(X = fires_pca_esc, is_distance = FALSE, dims = 3, perplexity = 10,
theta = 0.5, max_iter = 500)
tsne
head(tsne$Y)
resultados <- as.data.frame(tsne$Y)
colnames(resultados) <- c("dim_1", "dim_2")
resultados$numero <- as.character(fires_pca_esc$numero)
ggplot(data = resultados, aes(x = dim_1, y = dim_2)) +
geom_point(aes(color = numero)) +
theme_bw()
resultados <- as.data.frame(tsne$Y)
colnames(resultados) <- c("dim_1", "dim_2")
resultados$numero <- as.character(fires_pca_esc$numero)
resultados <- as.data.frame(tsne$Y)
colnames(resultados) <- c("dim_1", "dim_2")
ggplot(data = resultados, aes(x = dim_1, y = dim_2)) +
geom_point(aes(color = numero)) +
theme_bw()
resultados <- as.data.frame(tsne$Y)
colnames(resultados) <- c("dim_1", "dim_2")
ggplot(data = resultados, aes(x = dim_1, y = dim_2)) +
geom_point(aes(color = rainbow())) +
theme_bw()
resultados <- as.data.frame(tsne$Y)
colnames(resultados) <- c("dim_1", "dim_2")
ggplot(data = resultados, aes(x = dim_1, y = dim_2)) +
geom_point(aes(color = rainbow(5))) +
theme_bw()
resultados <- as.data.frame(tsne$Y)
colnames(resultados) <- c("dim_1", "dim_2")
ggplot(data = resultados, aes(x = dim_1, y = dim_2)) +
geom_point(aes(color = rainbow(33))) +
theme_bw()
theme_bw()
ggplot(data = resultados, aes(x = dim_1, y = dim_2)) +
geom_point(aes(color = blues9)) +
theme_bw()
ggplot(data = resultados, aes(x = dim_1, y = dim_2)) +
geom_point(aes(color = blue)) +
theme_bw()
plot3d(
x=output$`Axis1`, y=output$`Axis2`, z=output$`Axis3`,
col = c("blue", "green", "pink"),
type = 's',
radius = .15,
xlab="Comp 1", ylab="Comp 2", zlab="Comp 3")
